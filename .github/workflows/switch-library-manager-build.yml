# 编译switch-library-manager
name: switch-library-manager-build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install and setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.15.15'

      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: giwty/switch-library-manager

        # 安装编译所需依赖
      - name: Get the bundler and install bundler
        run: |
          go get -u github.com/asticode/go-astilectron-bundler/...
          go install github.com/asticode/go-astilectron-bundler/astilectron-bundler
          mv $HOME/go/bin/astilectron-bundler .

        # 替换raw.githubusercontent.com地址为国内能快速访问的镜像地址
      - name: Change raw url
        run: sed -i 's/raw.githubusercontent.com\/\(.*\)\/\(.*\)\/\(.*\)\/\(.*\)/cdn.jsdelivr.net\/gh\/\1\/\2@\3\/\4/g' `grep -rl raw.githubusercontent.com ./`

        # 只编译windows版本
      - name: Update bundler.json environments
        run: |
          sudo apt-get install jq
          jq '.environments = [{"arch": "amd64", "os": "windows"}]' bundler.json > new-bundler.json
          mv new-bundler.json bundler.json
          cat bundler.json

        # 编译
      - name: Build
        run: |
          go env -w GO111MODULE=on
          go mod download
          ./astilectron-bundler

        # 读取slm.json中的版本号
      - name: Set version
        id: version
        run: echo "::set-output name=version::$(jq .version slm.json | sed -r 's/"(.*)"/\1/g')"

        # 发布
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          tag: SLM-v${{steps.version.outputs.version}}
          name: SLM-v${{steps.version.outputs.version}}
          body: Github Action auto build.
          artifacts: output/windows-amd64/Switch-Library-Manager.exe
          token: ${{ secrets.GITHUB_TOKEN }}
